{"version":3,"sources":["../../../inline/information-panel/information-panel.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,SAAA,EAAW,YAAA,EAAyC,KAAA,EAAM,MAAM,eAAA,CAAgB;AAEnG,wFAAwF;AACxF,yFAAyF;AAEzF,IAAM,QAAA,GAAmB,mBAAA,CAAoB;AAI7C;IA2BE;QAdO,oBAAe,GAAW,CAAC,CAAC;QAK5B,WAAM,GAAY,KAAK,CAAC;QACxB,YAAO,GAAY,KAAK,CAAC;QACzB,kBAAa,GAAY,KAAK,CAAC;IAOjB,CAAC;IAtBrB,sBAAI,4CAAK;aAAT,UAAU,KAAc;YACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;;;OAAA;IACA,sBAAI,sDAAe;aAAnB,UAAoB,eAAwB;YAC3C,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;QAC1C,CAAC;;;OAAA;IAYc,wCAAc,GAA7B,UAA8B,OAAY;QACxC,IAAM,GAAG,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;QAC5C,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IACtH,CAAC;IAEqB,CAAC;IAGvB,4CAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEM,mDAAe,GAAtB;QAAA,iBAOC;QANC,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,iFAAiF;QACjF,iGAAiG;QAEjG,UAAU,CAAC,UAAC,CAAK,IAAK,OAAA,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,EAAnE,CAAmE,CAAC,CAAC;IAC7F,CAAC;IAEM,0CAAM,GAAb;QACE,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAE3B,oBAAoB;QAClB,4CAA4C;QAC9C,GAAG;IACL,CAAC;IAEM,oDAAgB,GAAvB,UAAwB,KAAa;QACnC,IAAI,CAAC,OAAO,GAAG,KAAK,KAAK,MAAM,CAAC;QAChC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEM,0DAAsB,GAA7B,UAA8B,KAAa;QACzC,IAAI,CAAC,aAAa,GAAG,KAAK,KAAK,MAAM,CAAC;IACxC,CAAC;IAEO,6CAAS,GAAjB,UAAkB,OAAY;QAC5B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;IACtF,CAAC;IAEO,iDAAa,GAArB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,yBAAyB,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC;QAClG,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACxB,CAAC;IACH,CAAC;IACI,oCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,QAAQ;oBAClB,QAAQ,EAAE,2mCAwBT;oBACD,MAAM,EAAE,CAAC,4mEAER,CAAC;iBACH,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,wCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,wCAAc,GAA2C;QAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACrC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,UAAU,EAAG,EAAE,EAAE;QACxD,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAE;QAC1D,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,EAAG,EAAE,EAAE;KAC3E,CAAC;IACF,gCAAC;CAnHD,AAmHC,IAAA;SAnHY,yBAAyB","file":"information-panel.component.js","sourceRoot":"","sourcesContent":["import {Component, ViewChild, HostListener, AfterViewInit, ElementRef, Input} from '@angular/core';\n\n// Externalized (polyglot) text values for field labels, input placeholders, button text\n// screen reader text, page headings, user instructions, help messages, menu uploads, etc\n\nconst SELECTOR: string = 'information-panel';\n\n\n\nexport class InformationPanelComponent implements AfterViewInit {\n\n  _title: String;\n  _helpButtonLabel: String;\n\n   set title(title : String) {\n    this._title = title;\n  }\n   set helpButtonLabel(helpButtonLabel : String) {\n    this._helpButtonLabel = helpButtonLabel;\n  }\n\n  public offsetRight: string;\n  public containerHeight: number = 0;\n\n   waypoint: ElementRef;\n   container: ElementRef;\n\n  public active: boolean = false;\n  public isFixed: boolean = false;\n  public isFixedBottom: boolean = false;\n\n  private static getOffsetRight(element: any): number {\n    const box = element.getBoundingClientRect();\n    return document.documentElement.clientWidth - (box.left + window.pageXOffset - document.documentElement.clientLeft);\n  }\n\n  public constructor(){};\n\n  \n  onResize() {\n    this.positionPanel();\n  }\n\n  public ngAfterViewInit(): void {\n    this.positionPanel();\n\n    // wait a tick to avoid one-time devMode unidirectional-data-flow-violation error\n    // https://angular.io/docs/ts/latest/cookbook/component-communication.html#!#parent-to-view-child\n\n    setTimeout((_:any) => this.containerHeight = this.getHeight(this.container.nativeElement));\n  }\n\n  public toggle() {\n    this.active = !this.active;\n\n    //if (this.active) {\n      //this.intercom.trackEvent('openHelpPanel');\n    //}\n  }\n\n  public onWaypointChange(event: string): void {\n    this.isFixed = event === 'down';\n    this.positionPanel();\n  }\n\n  public onWaypointChangeBottom(event: string): void {\n    this.isFixedBottom = event === 'down';\n  }\n\n  private getHeight(element: any): number {\n    return Math.round(this.container.nativeElement.getBoundingClientRect().height) + 20;\n  }\n\n  private positionPanel(): void {\n    if (this.waypoint && this.isFixed) {\n      this.offsetRight = InformationPanelComponent.getOffsetRight(this.waypoint.nativeElement) + 'px';\n    }\n    else {\n      this.offsetRight = '';\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: SELECTOR,\n  template: `\n    <span #waypoint class=\"information-panel-waypoint-top\" waypoint [offset]=\"10\" (waypointChange)=\"onWaypointChange($event)\"></span>\n    <span class=\"information-panel-waypoint-bottom\" waypoint [offset]=\"containerHeight\" (waypointChange)=\"onWaypointChangeBottom($event)\"></span>\n    <div class=\"information-panel\" #container [class.active]=\"active\" [class.fixed]=\"isFixed\" [class.fixed-bottom]=\"isFixedBottom\" [ngStyle]=\"{right: offsetRight}\">\n      <div class=\"information-panel__viewport\">\n        <button class=\"link-btn information-panel__handle\" (click)=\"toggle()\">\n          <div class=\"information-panel__label\">\n            <icon icon=\"help\"></icon>\n            <span>\n              {{_helpButtonLabel}}\n            </span>\n          </div>\n          <div class=\"information-panel__arrow\">\n            <icon icon=\"chevron-left-green\"></icon>\n          </div>\n        </button>\n        <div class=\"information-panel__content\">\n          <h2>\n            {{_title}}\n          </h2>\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .panel{border:1px solid #d5d5d5}.panel--light{background-color:#d5d5d5}.panel--neutral{background-color:#d5d5d5}.information-panel-container{position:relative}.main .information-panel-container,.features .information-panel-container{margin-right:-32px}.information-panel-content{margin-right:90px}.information-panel{background:#f0efef;position:absolute;width:60px;top:0;right:0;z-index:999;transition:width 0.6s cubic-bezier(0.23, 1, 0.32, 1),box-shadow 0.4s;will-change:width;overflow:hidden}.information-panel__viewport{border:1px solid #d5d5d5;display:flex;align-items:stretch;transform:0.6s cubic-bezier(0.23, 1, 0.32, 1);width:350px}.information-panel.active,.information-panel:hover,.information-panel:active,.information-panel:focus{box-shadow:2px 2px 10px 0 rgba(0,0,0,0.3)}.information-panel.active{width:350px}.information-panel.active .information-panel__arrow{transform:rotate(180deg)}.information-panel.fixed{position:fixed;top:10px}.information-panel.fixed-bottom{position:absolute;bottom:10px;top:auto;right:0 !important}.information-panel__handle{padding:12px 18px;display:flex;flex-direction:column;justify-content:space-between;align-items:center;width:60px;border-right:1px solid #d5d5d5;border-top:none;border-bottom:none;border-left:none}.information-panel__handle:active,.information-panel__handle:focus{outline:none}.information-panel__label span{font-size:12px;margin-top:3px;display:block}.information-panel__arrow{transition:transform 0.4s}.information-panel__content{padding:32px}.information-panel__content h2{margin-top:-8px;font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;font-weight:normal;transform:translateZ(0)}.information-panel__content ul{padding:0;margin-bottom:25px}.information-panel__content li{list-style-type:none;margin-bottom:15px;font-weight:bold}.information-panel-waypoint-top{position:absolute;top:0;right:0}.information-panel-waypoint-bottom{position:absolute;bottom:0;right:0}.link-btn,.link-btn:hover,.link-btn:focus,.link-btn:disabled{color:#266eb3;background:transparent;box-shadow:none;font-weight:bold}.link-btn:hover{text-decoration:underline}.link-btn:disabled{color:#d5d5d5}\n  `]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'title': [{ type: Input },],\n'helpButtonLabel': [{ type: Input },],\n'waypoint': [{ type: ViewChild, args: ['waypoint', ] },],\n'container': [{ type: ViewChild, args: ['container', ] },],\n'onResize': [{ type: HostListener, args: ['window:resize', ['$event'], ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}