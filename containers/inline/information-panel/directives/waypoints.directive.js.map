{"version":3,"sources":["../../../../inline/information-panel/directives/waypoints.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,UAAA,EAAY,KAAA,EAAO,MAAA,EAAQ,YAAA,EAAuC,MAAM,eAAA,CAAgB;AAE3G,OAAO,wCAAA,CAAyC;AAIhD,IAAM,QAAA,GAAmB,YAAA,CAAa;AAGtC;IAQE,2BAA0B,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;QAL5C,eAAU,GAAY,KAAK,CAAC;QAC5B,mBAAc,GAAG,IAAI,YAAY,EAAE,CAAC;IAIW,CAAC;IAE1C,2CAAe,GAAtB;QAAA,iBAEC;QADC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,EAAE,GAAG,CAAC,CAAC;IAC5C,CAAC;IAEM,uCAAW,GAAlB;QAAA,iBAmBC;QAlBC,IAAI,MAAM,GAAQ;YAChB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;YACnC,OAAO,EAAE,UAAC,SAAiB,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,EAAnC,CAAmC;SACpE,CAAC;QAEF,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAChC,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACtC,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAEM,uCAAW,GAAlB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC;IACI,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,QAAQ;iBACnB,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,gCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;KACnB,EAF6F,CAE7F,CAAC;IACK,gCAAc,GAA2C;QAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC5B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAChC,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KACpC,CAAC;IACF,wBAAC;CAvDD,AAuDC,IAAA;SAvDY,iBAAiB","file":"waypoints.directive.js","sourceRoot":"","sourcesContent":["import {Directive, ElementRef, Input, Output, EventEmitter, AfterViewInit, OnDestroy} from '@angular/core';\n\nimport 'waypoints/lib/noframework.waypoints.js';\n\ndeclare let Waypoint: any;\n\nconst SELECTOR: string = '[waypoint]';\n\n\nexport class WaypointDirective implements AfterViewInit, OnDestroy {\n   context: Element;\n   offset: number | string;\n   horizontal: boolean = false;\n   waypointChange = new EventEmitter();\n\n  public waypoint: any;\n\n  public constructor(public element: ElementRef) {}\n\n  public ngAfterViewInit(): void {\n    setTimeout(() => this.setWaypoint(), 250);\n  }\n\n  public setWaypoint(): void {\n    let config: any = {\n      element: this.element.nativeElement,\n      handler: (direction: string) => this.waypointChange.emit(direction)\n    };\n\n    if (this.offset) {\n      config.offset = this.offset;\n    }\n\n    if (this.context) {\n      config.context = this.context;\n    }\n\n    if (this.horizontal) {\n      config.horizontal = this.horizontal;\n    }\n\n    this.waypoint = new Waypoint(config);\n  }\n\n  public ngOnDestroy(): void {\n    if (this.waypoint) {\n      this.waypoint.destroy();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: SELECTOR\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'context': [{ type: Input },],\n'offset': [{ type: Input },],\n'horizontal': [{ type: Input },],\n'waypointChange': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}