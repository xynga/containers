{"version":3,"sources":["../../../../inline/tooltip/directives/tooltip-target.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAA0B,MAAA,EAAQ,YAAA,EAAc,UAAA,EAAW,MAAM,eAAA,CAAgB;AAKpG,IAAM,QAAA,GAAmB,iBAAA,CAAkB;AAG3C;IASE,gCAA2B,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;QAP7C,qBAAgB,GAAW,WAAW,CAAC;QACvC,eAAU,GAAW,UAAU,CAAC;QAEhC,oBAAe,GAAsB,IAAI,YAAY,EAAE,CAAC;IAIR,CAAC;IAE3C,yCAAQ,GAAf;QAAA,iBAKC;QAJC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACpG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,UAAC,MAAU,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,EAAjC,CAAiC,CAAC,CAAC;QAC5H,CAAC;IACH,CAAC;IAEM,4CAAW,GAAlB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QACxC,CAAC;IACH,CAAC;IACI,iCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,QAAQ;iBACnB,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,qCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;KACnB,EAF6F,CAE7F,CAAC;IACK,qCAAc,GAA2C;QAChE,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACnC,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACtC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAChC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KACrC,CAAC;IACF,6BAAC;CAtCD,AAsCC,IAAA;SAtCY,sBAAsB","file":"tooltip-target.directive.js","sourceRoot":"","sourcesContent":["import {Directive, Input, OnInit, OnDestroy, Output, EventEmitter, ElementRef} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\nimport {TooltipComponent} from \"../tooltip.component\";\n\nconst SELECTOR: string = '[tooltipTarget]';\n\n\nexport class TooltipTargetDirective implements OnInit, OnDestroy {\n   tooltipTarget : TooltipComponent;\n   targetAttachment: string = 'top right';\n   attachment: string = 'top left';\n\n   onTooltipToggle: EventEmitter<any> = new EventEmitter();\n\n  public toggleSubscription: Subscription;\n\n  public constructor(private element: ElementRef) {}\n\n  public ngOnInit(): void {\n    if (this.tooltipTarget) {\n      this.tooltipTarget.setupTooltip(this.element.nativeElement, this.attachment, this.targetAttachment);\n      this.toggleSubscription = this.tooltipTarget.onTooltipToggle.subscribe((toggle:any) => this.onTooltipToggle.emit(toggle));\n    }\n  }\n\n  public ngOnDestroy(): void {\n    if (this.toggleSubscription) {\n      this.toggleSubscription.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: SELECTOR\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltipTarget': [{ type: Input },],\n'targetAttachment': [{ type: Input },],\n'attachment': [{ type: Input },],\n'onTooltipToggle': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}