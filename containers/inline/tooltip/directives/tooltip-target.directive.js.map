{"version":3,"file":"tooltip-target.directive.js","sourceRoot":"","sources":["../../../../inline/tooltip/directives/tooltip-target.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAqB,MAAM,EAAE,YAAY,EAAE,UAAU,EAAC,MAAM,eAAe,CAAC;AAGpG,OAAO,EAAC,gBAAgB,EAAC,MAAM,sBAAsB,CAAC;AAEtD,IAAM,QAAQ,GAAW,iBAAiB,CAAC;;IAczC,gCAA2B,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;gCAPV,WAAW;0BACjB,UAAU;+BAEO,IAAI,YAAY,EAAE;KAIf;IAE3C,yCAAQ,GAAf;QAAA,iBAKC;QAJC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACpG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,UAAC,MAAU,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,EAAjC,CAAiC,CAAC,CAAC;SAC3H;KACF;IAEM,4CAAW,GAAlB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;SACvC;KACF;;gBAzBF,SAAS,SAAC;oBACT,QAAQ,EAAE,QAAQ;iBACnB;;;;gBATkE,UAAU;;;kCAW1E,KAAK;qCACL,KAAK;+BACL,KAAK;oCAEL,MAAM;;iCAfT;;SAUa,sBAAsB","sourcesContent":["import {Directive, Input, OnInit, OnDestroy, Output, EventEmitter, ElementRef} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\nimport {TooltipComponent} from \"../tooltip.component\";\n\nconst SELECTOR: string = '[tooltipTarget]';\n\n@Directive({\n  selector: SELECTOR\n})\nexport class TooltipTargetDirective implements OnInit, OnDestroy {\n  @Input() tooltipTarget : TooltipComponent;\n  @Input() targetAttachment: string = 'top right';\n  @Input() attachment: string = 'top left';\n\n  @Output() onTooltipToggle: EventEmitter<any> = new EventEmitter();\n\n  public toggleSubscription: Subscription;\n\n  public constructor(private element: ElementRef) {}\n\n  public ngOnInit(): void {\n    if (this.tooltipTarget) {\n      this.tooltipTarget.setupTooltip(this.element.nativeElement, this.attachment, this.targetAttachment);\n      this.toggleSubscription = this.tooltipTarget.onTooltipToggle.subscribe((toggle:any) => this.onTooltipToggle.emit(toggle));\n    }\n  }\n\n  public ngOnDestroy(): void {\n    if (this.toggleSubscription) {\n      this.toggleSubscription.unsubscribe();\n    }\n  }\n}\n"]}