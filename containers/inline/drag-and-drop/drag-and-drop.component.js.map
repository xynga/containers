{"version":3,"sources":["../../../inline/drag-and-drop/drag-and-drop.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAc,MAAM,eAAA,CAAgB;AACvD,OAAO,EAAA,YAAE,EAAY,MAAM,iBAAA,CAAkB;AAE7C,IAAM,QAAA,GAAmB,eAAA,CAAgB;AAGzC;IAAA;QAGW,kBAAa,GAAY,KAAK,CAAC;IAsC1C,CAAC;IAnCG,uCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,EAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,iBAAiB,EAAE,IAAI,EAAC,CAAC,CAAC;IACnF,CAAC;IAEM,yCAAU,GAAjB,UAAkB,KAAU;QACxB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC/B,CAAC;IACE,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACtB,QAAQ,EAAE,QAAQ;oBAClB,QAAQ,EAAE,idAaT;oBACD,MAAM,EAAE,CAAC,gOAER,CAAC;iBACL,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,mCAAc,GAA2C;QAChE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KACxB,CAAC;IACF,2BAAC;CAzCD,AAyCC,IAAA;SAzCY,oBAAoB","file":"drag-and-drop.component.js","sourceRoot":"","sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport {FileUploader} from 'ng2-file-upload';\n\nconst SELECTOR: string = 'drag-and-drop';\n\n\nexport class DragAndDropComponent implements OnInit{\n\n     URL: string;\n    public dropZoneHover: boolean = false;\n    public fileUploader: FileUploader;\n\n    ngOnInit() {\n        this.fileUploader = new FileUploader({url: this.URL, removeAfterUpload: true});\n    }\n\n    public onFileOver(event: any): void {\n        this.dropZoneHover = event;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: SELECTOR,\n    template: `\n      <div class=\"uploadWindow\" ng2FileDrop [ngClass]=\"{active: dropZoneHover}\" (fileOver)=\"onFileOver($event)\" [uploader]=\"fileUploader\">\n          <h3>Drag and Drop</h3>\n          <div>\n              <p>File Queue</p>\n              <table>\n                  <tr *ngFor=\"let item of fileUploader.queue\">\n                      <td>{{item?.file?.name}}</td>\n                  </tr>\n              </table>\n          </div>\n\n      </div>\n    `,\n    styles: [`\n      .uploadWindow{margin-bottom:30px;border:2px dashed lightblue;height:320px;width:320px;overflow-y:auto;background-color:white;text-align:center;transition:border-color 0.2s}.active{border-color:cornflowerblue}\n    `]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'URL': [{ type: Input },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}