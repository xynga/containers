{"version":3,"sources":["../../../inline/modal-panel/modal-panel.component.ts"],"names":[],"mappings":"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","file":"modal-panel.component.js","sourceRoot":"","sourcesContent":["import {Component, OnInit, OnDestroy, Input, Output, EventEmitter, ViewEncapsulation} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {Router, NavigationStart, RouterModule} from '@angular/router';\n\nimport {Observable} from 'rxjs/Observable';\nimport {Subscription} from 'rxjs/Subscription';\nimport {BodyDirective} from \"./directives/body.directive\";\n\n\nconst INACTIVE: string = 'inactive';\nconst ACTIVE: string = 'active';\nconst EXPANDED: string = 'expanded';\n\nconst modalSpeed: number = 500;\n\nconst opacityOff = style({opacity: 0});\nconst opacityOn = style({opacity: 1});\n\nconst slideRight = style({transform: 'translateX(100%)'});\nconst slideNone = style({transform: 'translateX(0)'});\nconst slideLeft = style({transform: 'translateX(-100%)'});\n\nconst easeOutQuart: string = 'cubic-bezier(0.165, 0.840, 0.440, 1.000)';\n\nconst animateDefault = animate(`${modalSpeed}ms ${easeOutQuart}`);\n\nconst SELECTOR: string = 'modal-panel';\n\n\nexport class ModalPanelComponent implements OnInit, OnDestroy {\n    \n    public set open(open: boolean) {\n        if (undefined !== open && null !== open) {\n            if (!this.panelOpen && open) {\n                this.activate(0);\n            }\n            else if (this.panelOpen && !open) {\n                this.close();\n            }\n\n            this.routerEventsMonitoring = false; // because we got an @Input value we were not accessed vai a route\n        }\n    };\n\n    \n    public set detailOpen(open: boolean) {\n        if (undefined !== open && null !== open) {\n            if (open) {\n                this.panelState = EXPANDED;\n\n                if (!this.panelOpen) {\n                    this.activate(0);\n                }\n            }\n            else if (this.isExpanded){\n                this.panelState = ACTIVE;\n                this.closeDetail();\n            }\n\n            this.routerEventsMonitoring = false; // because we got an @Input value we were not accessed vai a route\n        }\n    };\n\n     public confirmClose: () => Observable<boolean>;\n     public confirmDetailClose: () => Observable<boolean>;\n\n     public closed = new EventEmitter();\n\n     public detailClosed = new EventEmitter();\n\n    public panelOpen: boolean = false;\n\n    public panelState: string = INACTIVE;\n\n    private isAnimating: boolean = false;\n\n    private confirmCloseSubscription: Subscription;\n    private confirmDetailCloseSubscription: Subscription;\n\n    private routerEventsSubscription: Subscription;\n    private routerEventsMonitoring: boolean = true;\n\n    public get isExpanded(): boolean {\n        return EXPANDED === this.panelState;\n    }\n\n    public constructor(private body: BodyDirective, private router: Router) {}\n\n    public ngOnInit(): void {\n        if (this.routerEventsMonitoring) {\n            this.activate(0);\n\n            this.routerEventsSubscription = this.router.events.subscribe((event) => {\n                if (event instanceof NavigationStart) {\n                    this.activate(modalSpeed);\n                }\n            });\n        }\n    }\n\n    public onBackdropClicked(): void {\n        this.open = false;\n    }\n\n    public onCloseClicked(): void {\n        this.close();\n    }\n\n    public onCloseDetailClicked(): void {\n        this.detailOpen = false;\n    }\n\n    public activate(timer: number): void {\n        if (!this.panelOpen) {\n            this.body.modalOpen = true;\n            this.panelOpen = true;\n            this.panelState = INACTIVE;\n\n            setTimeout(() => {\n                this.panelState = ACTIVE;\n            }, timer);\n        }\n    }\n\n    public close(): void {\n        if (this.confirmClose) {\n            this.confirmCloseSubscription = this.confirmClose().subscribe((confirmed: boolean) => this.deactivate(confirmed));\n        }\n        else {\n            this.deactivate(true);\n        }\n    }\n\n    public deactivate(confirmed: boolean): void {\n        if (confirmed) {\n            if (!this.isAnimating) {\n                this.isAnimating = true;\n                this.panelState = INACTIVE;\n\n                setTimeout(() => {\n                    this.isAnimating = false;\n                    this.panelOpen = false;\n                    this.body.modalOpen = false;\n                    this.closed.emit();\n                }, modalSpeed);\n            }\n        }\n\n        if (this.confirmCloseSubscription) {\n            this.confirmCloseSubscription.unsubscribe();\n        }\n    }\n\n    public closeDetail(): void {\n        if (this.confirmDetailClose) {\n            this.confirmDetailCloseSubscription = this.confirmDetailClose().subscribe((confirmed: boolean) => this.unexpand(confirmed));\n        }\n        else {\n            this.unexpand(true);\n        }\n    }\n\n    public unexpand(confirmed: boolean): void {\n        if (confirmed) {\n            this.panelState = ACTIVE;\n            this.detailClosed.emit();\n        }\n\n        if (this.confirmDetailCloseSubscription) {\n            this.confirmDetailCloseSubscription.unsubscribe();\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.body.modalOpen = false;\n\n        if (this.routerEventsSubscription) {\n            this.routerEventsSubscription.unsubscribe();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: SELECTOR,\n    template: `\n      <div class=\"modal-container\" *ngIf=\"panelOpen\" [@containerState]=\"panelState\" [class.is-expanded]=\"isExpanded\">\n        <div class=\"modal-backdrop\" (click)=\"onBackdropClicked()\" [@backdropState]=\"panelState\"></div>\n        <div class=\"modal-panel\" [@modalState]=\"panelState\">\n          <!--<button class = \"button-close\" (click)=\"onCloseClicked()\" *ngIf=\"panelState === 'active'\">Close</button>-->\n          <ng-content></ng-content>\n          <span class=\"modal-detail-overlay\" *ngIf=\"panelState === 'expanded'\" [@modalDetailOverlayState]=\"panelState\" (click)=\"onCloseDetailClicked()\"></span>\n        </div>\n        <div class=\"modal-detail-container\">\n          <ng-content select=\".modal-detail\"></ng-content>\n        </div>\n      </div>\n    `,\n    styles: [`\n      modal-panel{position:relative;z-index:4000}.modal-container{position:fixed;width:100%;height:100%;left:0;top:0}.modal-backdrop{position:fixed;top:0;left:0;width:100%;height:100%;display:block;background:rgba(0,0,0,0.4);opacity:0.01;will-change:opacity}.hide-backdrop .modal-backdrop{display:none !important}.modal-panel{background-color:#f0efef;box-shadow:2px 2px 10px 0 rgba(0,0,0,0.3);padding:47px 40px 40px;position:fixed;width:400px;max-width:100%;height:100%;right:0;top:0;transform:translateX(100%);will-change:transform;overflow:auto;z-index:99}.is-expanded .modal-panel{box-shadow:none}.modal-panel-large .modal-panel{background:#fff;width:calc(100% - 400px)}.modal-panel-medium .modal-panel{background:#fff;width:calc(100% - 400px)}.modal-detail-overlay{position:fixed;top:0;left:0;height:9999px;width:100%;background:rgba(0,0,0,0.4);z-index:99;opacity:0;box-shadow:inset -5px 0px 8px -4px rgba(0,0,0,0.4);transition:opacity 0.5s}.is-expanded .modal-detail-overlay.ng-animating{opacity:1}.modal-detail-container{box-sizing:border-box;position:fixed;left:0;top:0;width:100%;height:100%;background:#fff;overflow:auto;padding-left:400px;transform:translateX(100%);z-index:55}.modal-detail-container .modal-detail{padding:32px;min-height:100%;background-color:#f0efef}.modal-panel-large .modal-detail-container{background-color:#f0efef;padding:0}.modal-panel-large .modal-detail-container .modal-detail{width:400px;margin-left:auto}.button-close{display:block;position:absolute;top:19px;right:20px}@media screen and (min-width: 64em){.div-style{width:100%;display:inline-block;*display:inline;zoom:1;letter-spacing:normal;word-spacing:normal;vertical-align:top;text-rendering:auto}}\n    `],\n    encapsulation: ViewEncapsulation.None,\n    animations: [\n        trigger('containerState', [\n            state('inactive, active', slideNone),\n            state('expanded', slideLeft),\n            transition('* => expanded', animateDefault),\n            transition('expanded => *', animateDefault)\n        ]),\n        trigger('backdropState', [\n            state('inactive', opacityOff),\n            state('active, expanded', opacityOn),\n            transition('* => active', animateDefault),\n            transition('* => inactive', animateDefault)\n        ]),\n        trigger('modalState', [\n            state('inactive, expanded', slideRight),\n            state('active', slideNone),\n            transition('* => active', animateDefault),\n            transition('* => inactive', animateDefault),\n            transition('* => expanded', animateDefault)\n        ]),\n        trigger('modalDetailOverlayState', [\n            state('inactive, active', opacityOff),\n            state('expanded', opacityOn),\n            transition('* => expanded', animateDefault),\n            transition('expanded => *', animateDefault)\n        ])\n    ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BodyDirective, },\n{type: Router, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'open': [{ type: Input },],\n'detailOpen': [{ type: Input },],\n'confirmClose': [{ type: Input },],\n'confirmDetailClose': [{ type: Input },],\n'closed': [{ type: Output },],\n'detailClosed': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}